{"version":3,"sources":["config.js","LoginForm.jsx","firebase/TeachersDisplay.jsx","firebase/TeacherContentDisplay.jsx","WelcomePage.jsx","Intro.jsx","Signup.jsx","Panel.jsx","StudentSignUp.jsx","TeacherSignUp.jsx","firebase/TeachersListing.jsx","firebase/communicator/Video.jsx","TeacherSelected.jsx","firebase/communicator/CoolButton.jsx","firebase/communicator/ResetButton.jsx","firebase/communicator/DemoRegister.jsx","AuthContext.js","App.jsx","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getDatabase","getAuth","LoginForm","_useState","useState","_useState2","_slicedToArray","_useState3","_useState4","currentErrorMessage","setErrorMessage","_useState5","_useState6","setfound","navigate","useNavigate","provider","FacebookAuthProvider","setAuth","foundme","_jsx","className","children","_jsxs","onSubmit","e","preventDefault","_e$target$elements","target","elements","email","password","console","log","value","signInWithEmailAndPassword","then","userCredential","user","accessToken","teacherId","uid","concat","catch","error","errorMessage","message","type","name","placeholder","id","Button","variant","GoogleLogin","onSuccess","response","onError","onClick","signInWithPopup","result","credentialFromResult","errorCode","code","_this","customData","credentialFromError","TeachersDisplay","uuid","useParams","currentTeachers","setCurrentTeachers","setLoading","currentFilterValue","setCurrentValue","database","getFilteredTeachers","useCallback","refer","ref","teachers","onValue","snapshot","forEach","snap","keyName","key","dataM","val","push","filter","teacher","data","TeacherName","includes","useEffect","_Fragment","onChange","size","Table","map","row","index","CreatedDate","Link","to","ID","src","imageUrl","width","height","TeacherContentDisplay","props","helm","Navbar","bg","Container","Brand","href","Nav","FancyBorder","color","style","backgroundColor","Dialog","title","CurrentDialog","WelcomeDialog","Row","Col","Intro","Stack","gap","Item","Signup","setEmail","setPassword","htmlFor","label","required","createUserWithEmailAndPassword","userId","NavLink","Panel","_ref","isActive","setIsActive","StudentSignUp","phoneNumber","setPhone","details","setDetails","starttimeof","setTime","_useState7","_useState8","setName","_useState9","_useState10","_useState11","_useState12","_useState13","_useState14","langaugeCode","setLanguage","_useState15","_useState16","setUID","_useState17","_useState18","countrycodesel","setCountryCode","options","useMemo","countryList","getData","ReactLanguageSelect","names","defaultLanguage","optionsSize","selectedSize","onSelect","languageCode","rows","cols","Select","umid","set","CreatedBy","studentClassificationID","StudentName","Phone","WhatToLearn","StartDate","UID","CountryCode","PreferedLanguage","TeacherSignUp","years","setYears","useRef","keym","TeacherClassificationID","Experience","YearsOfTeaching","TeachersListing","teacherInfo","setSelectedTeacher","AddTeacher","currentUID","VideoContent","currentContext","videoUrl","disabled","controls","TeacherSelected","teacherData","selectedTeacher","selectedVideoUrl","setVideoUrl","videodisabled","setDisabled","enableDisableText","setDisabledText","alt","url","CoolButton","currentValPush","goals","timeSlotSelected","ResetButton","DemoRegister","ngoals","setGoals","method","newGoals","values","currentVal","AuthContext","createContext","AuthProvider","currentUser","setCurrentUser","loading","onAuthStateChanged","getUser","login","signOut","signUp","Provider","App","JSON","parse","localStorage","getItem","isAuthenticated","setIsAuthenticated","setItem","stringify","WelcomePage","BrowserRouter","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","GoogleOAuthProvider","clientId","React","StrictMode"],"mappings":"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","file":"static/js/main.388d0c32.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport { getDatabase } from \"firebase/database\";\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n\r\n\r\n// Import the functions you need from the SDKs you need\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nexport const firebaseConfig = {\r\n  apiKey: \"AIzaSyBak97Kjb9TEnRexxTD0kfmimDdzfpbhXc\",\r\n  authDomain: \"teachercomdb.firebaseapp.com\",\r\n  databaseURL: \"https://teachercomdb-default-rtdb.firebaseio.com\",\r\n  projectId: \"teachercomdb\",\r\n  storageBucket: \"teachercomdb.appspot.com\",\r\n  messagingSenderId: \"735998735764\",\r\n  appId: \"1:735998735764:web:82d17425482f1e8d7e4b81\",\r\n  measurementId: \"G-1FTBSYGJ2G\"\r\n};\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nexport const db = getDatabase();\r\n\r\nexport const auth = getAuth(app);\r\nexport default app ;\r\n\r\n\r\n","import './css/main.css';\r\nimport './css/util.css';\r\n\r\nimport React, { useContext  ,useState } from \"react\";\r\nimport { FacebookAuthProvider, signInWithPopup } from \"firebase/auth\";\r\n\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {auth } from './config'; \r\n\r\nimport {Button} from 'react-bootstrap';\r\nimport { GoogleLogin } from '@react-oauth/google';\r\n\r\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword , updateProfile } from \"firebase/auth\";  \r\n\r\n\r\nconst  LoginForm = () => {\r\n\r\nconst [loading, setLoading] = useState(true);\r\nconst [currentErrorMessage,setErrorMessage] = useState('');\r\nconst [found, setfound] = useState(false);\r\nconst navigate = useNavigate();\r\nconst localid = \"1vlXRxopDGNTzJgtPBy53PoUHDj1\";\r\n// global id is local id\r\n\r\nconst provider = new FacebookAuthProvider();\r\n\r\nconst setAuth=(foundme) => {\r\n      setfound(foundme);\r\n\r\n}\r\n \r\nconst loginFaceBook = (e) => {\r\n\r\n\tsignInWithPopup(auth, provider)\r\n\t.then((result) => {\r\n\t  // The signed-in user info.\r\n\t  const user = result.user;\r\n  \r\n\t  // This gives you a Facebook Access Token. You can use it to access the Facebook API.\r\n\t  const credential = FacebookAuthProvider.credentialFromResult(result);\r\n\t  const accessToken = credential.accessToken;\r\n\t  setAuth(true); \r\n\t  navigate(`/teachers/${accessToken}` );\r\n  \r\n      \r\n\t  // IdP data available using getAdditionalUserInfo(result)\r\n\t  // ...\r\n\t})\r\n\t.catch((error) => {\r\n\t  // Handle Errors here.\r\n\t  const errorCode = error.code;\r\n\t  this.currentErrorMessage = \"Unable to Login Facebook User ID Password or Credentials Not matched\";\r\n\t  console.log(errorCode);\r\n\t  const errorMessage = error.message;\r\n\t  // The email of the user's account used.\r\n\t  const email = error.customData.email;\r\n\t  // The AuthCredential type that was used.\r\n\t  const credential = FacebookAuthProvider.credentialFromError(error);\r\n\r\n\t  // ...\r\n\t});\r\n\r\n}\r\n\r\n\r\n\r\nconst handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = e.target.elements;\r\n  console.log(email.value);\r\n\r\nsignInWithEmailAndPassword(auth, email.value, password.value)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n    const user = userCredential.user;\r\n\t console.log(user);\r\n\r\n\tif (user.accessToken != null ) {\r\n\t\tsetAuth(true);\r\n\t\tconst teacherId = user.uid;\r\n        navigate(`/teacherslist/${teacherId}`);\r\n\r\n  }\r\n  else \r\n  {\r\n\tsetAuth(false);\r\n  }\r\n\t\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n\r\n    const errorMessage = error.message;\r\n\tsetErrorMessage('Unable to Login User ID password Not correct');\r\n    setAuth(false);\r\n\tconsole.log(errorMessage);\r\n  });\r\n\r\n\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n\te.preventDefault();\r\n\te.preventDefault();\r\n    const { email, password  } = e.target.elements;\r\n  console.log(email.value);\r\n  \r\n\tif (email &&  password) {\r\n\t  registerUser(email,  password).then(() => {\r\n\t\tconsole.log(\"User created\")\r\n\t  })\r\n\t};\r\n  };\r\n  \r\n  \r\n  const registerUser = async (email,  password) => {\r\n\ttry {\r\n\t  console.log(\"> Registering user\")\r\n      setLoading(true);\r\n\t  const {\r\n\t\tuser\r\n\t  } = await createUserWithEmailAndPassword(auth, email, password)\r\n  \r\n\t  console.log(\"> Updating profile\")\r\n\r\n\t  await updateProfile(user, {\r\n\t\tdisplayName: 'Profile Updated for ' + email ,\r\n\t  });\r\n  \r\n\t  window.location.pathname = `/subscriptions`;\r\n\t} catch (e) {\r\n\t  console.log(e)\r\n\t}\r\n    setLoading(false);\r\n  }\r\n  \r\n\r\n\r\n  const handleSubmitNew = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = e.target.elements;\r\n  console.log(email.value);\r\n  \r\n  createUserWithEmailAndPassword(auth, email, password)\r\n  .then((userCredential) => {\r\n    // Signed in \r\n    const user = userCredential.user;\r\n\r\n    // ...\r\n  })\r\n  .catch((error) => {\r\n    const errorCode = error.code;\r\n    const errorMessage = error.message;\r\n    console.log(errorMessage  );\r\n\tconsole.log(errorCode);\r\n\t\r\n\t// ..\r\n  });\r\n\r\n\r\n  }\r\n\r\n \r\n  const responseMessage = (response) => {\r\n\tif(response)\r\n\t{\r\n\t navigate(`/teachers/${localid}`)\r\n\t}\r\n\tconsole.log(response);\r\n};\r\nconst errorMessage = (error) => {\r\n\tconsole.log(error);\r\n}\r\n\r\n   return (\r\n\r\n     <div className=\"limiter\">\r\n\t\t<div className=\"container-login100\">\r\n\t\t\t<div className=\"wrap-login100\">\r\n\t\t\t\t<div className=\"login100-form-title\">\r\n\t\t\t\t\t<span className=\"login100-form-title-1\">\r\n\t\t\t\t\t\tSign In\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<form className=\"login100-form validate-form\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className=\"wrap-input100 validate-input m-b-26\" data-validate=\"Username is required\">\r\n\t\t\t\t\t\t<span className=\"label-input100\">Username</span>\r\n\t\t\t\t\t\t<input className=\"input100\" type=\"text\" name=\"email\" placeholder=\"Enter username\"/>\r\n\t\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"wrap-input100 validate-input m-b-18\" data-validate = \"Password is required\">\r\n\t\t\t\t\t\t<span className=\"label-input100\">Password</span>\r\n\t\t\t\t\t\t<input className=\"input100\" type=\"password\" name=\"password\" placeholder=\"Enter password\"/>\r\n\t\t\t\t\t\t<span className=\"focus-input100\"></span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"flex-sb-m w-full p-b-30\">\r\n\t\t\t\t\t\t<div className=\"contact100-form-checkbox\">\r\n\t\t\t\t\t\t\t<input className=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"remember-me\"/>\r\n\t\t\t\t\t\t\t<label className=\"label-checkbox100\">\r\n\t\t\t\t\t\t\t\tRemember me\r\n\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='p-danger'>\r\n                        <h4>{currentErrorMessage}</h4>\t\t\t\t\t\t\r\n\t\t\t\t\t</div> \r\n\t\t\t   \r\n\t\t\t\t\t<div className=\"container-login100-form-btn\">\r\n\t\t\t\t\r\n\t\t\t\t\t<div className=\"container-login100-form-btn\">\r\n\t\t\t\t   \r\n\t\t\t\t\t   <Button variant=\"success\" type='submit'>Submit</Button>\r\n\t\t               \r\n\t\t        \t </div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t Or\r\n\t\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t<div className=\"container-login100-form-btn\">\r\n\t\t\t\t       \r\n\t\t\t\t\t\t<Button type=\"button\" variant=\"dark\">Apple Login</Button> \r\n\t\t\t\t\t\t<b></b>\r\n\t\t\t\t\t</div>\r\n\t\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t \t\r\n\t\t\t\t    <div className=\"container-login100-form-btn\">\r\n\t\t\t\t\t<GoogleLogin onSuccess={responseMessage} onError={currentErrorMessage} />\r\n                   </div>\t\t\r\n\r\n\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t &nbsp;\r\n\t\t\t\t\t \t\r\n\t\t\t\t    <div type=\"button\" className=\"container-login100-form-btn\">\r\n\t\t\t\t\r\n\t\t\t\t\t\t<Button onClick={loginFaceBook} variant=\"primary\">Facebook Login</Button>\r\n\t\t\t\t    </div>\t\t\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n   );\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n}\r\nexport default LoginForm;","\r\nimport './TeacherDisplay.css'\r\nimport {React, useState , useEffect, useCallback} from 'react' \r\nimport {Table} from 'react-bootstrap' ;\r\nimport {Link , useParams} from 'react-router-dom';\r\nimport { getDatabase, ref, onValue} from \"firebase/database\";\r\n\r\n\r\n\r\nfunction TeachersDisplay()  {\r\n// age 42 not bad\r\nvar teachersData =  [];\r\nconst teacherInfo = useParams();\r\n\r\n // we don't need to filter by id just show all teachers\r\nconst uuid = teacherInfo.teacherId;\r\nconsole.log(uuid);\r\n// global teacher list plus all \r\n// under one global id all and then filter based login Assigned Teacher \r\n// Generate guid\r\nvar [currentTeachers, setCurrentTeachers] = useState(teachersData);\r\n\r\n\r\nconst [loading, setLoading] = useState(true);\r\nvar [currentFilterValue, setCurrentValue] = useState('');\r\nconst database = getDatabase();\r\n\r\nconst  handleSubmit = (e) => {\r\n     setCurrentValue(e.target.value);\r\n    \r\n   \r\n\r\n\r\n};\r\nconst  handleChange = (e) => {\r\n    setCurrentValue(e.target.value);\r\n    \r\n    getFilteredTeachers(e.target.value);\r\n    \r\n     \r\n\r\n};\r\n\r\nconst  getFilteredTeachers = useCallback((currentFilterValue) => {\r\n \r\n    if(!currentFilterValue)\r\n    {\r\n       console.log(currentFilterValue);\r\n       const refer = ref(database, '/Teacher'  );\r\n       const teachers = [];\r\n         \r\n  \r\n         onValue(refer, (snapshot) => {\r\n             snapshot.forEach(snap => {\r\n                \r\n                 let keyName = snap.key;\r\n                 let dataM = snap.val();\r\n                 console.log(dataM);\r\n                 // No Fix DB Structure\r\n                    teachers.push({\"key\": keyName , \"data\": dataM});\r\n             });\r\n             setCurrentTeachers(teachers);\r\n             setLoading(false)\r\n         \r\n       });\r\n \r\n       if(currentFilterValue === \"\")\r\n       {\r\n           return;\r\n       }\r\n  \r\n     \r\n\r\n    }\r\n    currentTeachers = currentTeachers.filter ( teacher => teacher.data.TeacherName.includes(currentFilterValue));\r\n    setCurrentTeachers(currentTeachers);\r\n \r\n    \r\n    console.log(currentTeachers);\r\n    \r\n\r\n\r\n});\r\n\r\n\r\nuseEffect(() => {\r\n  console.log(uuid);  \r\n  const refer = ref(database, '/Teacher/'  );\r\n  const teachers = [];\r\n    \r\n    onValue(refer, (snapshot) => {\r\n        snapshot.forEach(snap => {\r\n           \r\n            let keyName = snap.key;\r\n            let dataM = snap.val();\r\n            // No Fix DB Structure\r\n               teachers.push({\"key\": keyName , \"data\": dataM});\r\n        });\r\n        setCurrentTeachers(teachers);\r\n        setLoading(false)\r\n    \r\n  });\r\n  //setCurrentTeachers(prevTeachers => prevTeachers.add(teachers))  \r\n}, [ setCurrentTeachers]);\r\n  \r\n\r\n \r\n return (\r\n    <div className=\"MainDiv\">\r\n      <div className=\"jumbotron text-center bg-sky\">\r\n          <h2>Teachers Information</h2>\r\n      </div>\r\n     <div className=\"container\">\r\n          <>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\r\n                            <form className=\"mt-4\" onSubmit={handleSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        name=\"search\"\r\n                                        placeholder=\"Type Here to Search By Teacher Name or Language\"\r\n                                        \r\n                                        value={currentFilterValue}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </div>\r\n                                <div>\r\n                                    <button className=\"button-orange\" size=\"lg\" type=\"submit\">\r\n          Search\r\n        </button>\r\n                                </div>    \r\n                                <div>\r\n                                    &nbsp;\r\n                                    &nbsp;\r\n                                    &nbsp;\r\n                                    \r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n      \r\n\r\n\r\n     </div>\r\n      <div className=\"container\">\r\n\r\n        \r\n          <Table  className=\"display table\">\r\n            <thead className=\"thead-dark\">\r\n                <tr>\r\n                    <th>Teacher Name</th>\r\n                    <th>Created Date</th>\r\n                    <th>View Course Content</th>\r\n                    <th>Picture</th>\r\n            \r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n            { currentTeachers.map( function(row,index)  {\r\n             \r\n                return (\r\n                   <tr key={index}>     \r\n                    <td>{row.data.TeacherName}</td>\r\n                    <td>{row.data.CreatedDate}</td>\r\n                    <td><Link id={index} className=\"navbar-item\"  to=\"/contents\" >   Contents</Link></td>\r\n            \r\n  <td> <img id={row.data.ID} src={row.data.imageUrl} background-repeat=\"none\"  width=\"100\" height=\"100\" /></td>\r\n                    </tr>\r\n              \r\n                    \r\n                );\r\n               \r\n                })}\r\n        \r\n            </tbody>\r\n            \r\n         </Table>\r\n          \r\n\r\n\r\n\r\n     </div>\r\n    </div>\r\n  );\r\n  \r\n\r\n};\r\n\r\nexport default TeachersDisplay;","\r\n\r\n\r\nimport {Container} from 'react-bootstrap';\r\nimport {Nav} from 'react-bootstrap';\r\nimport {Navbar} from 'react-bootstrap';\r\nimport {useParams} from 'react-router-dom';\r\nimport './TeacherContentDisplay.css';\r\n\r\n\r\nfunction TeacherContentDisplay(props) {\r\n  let { helm } = useParams();\r\n  console.log(helm);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Documents</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"https://firebasestorage.googleapis.com/v0/b/teachercomdb.appspot.com/o/Documents%2FReport%20Analysis%20Algorithms%20.docx?alt=media&token=06c70225-87a1-493b-bad8-eba52dcb50d7\">Lecture001.docx </Nav.Link>\r\n            <Nav.Link href=\"https://firebasestorage.googleapis.com/v0/b/teachercomdb.appspot.com/o/Documents%2FStatement%20of%20Purpose.pdf?alt=media&token=dec4a462-c5a8-44cf-ae0a-c428447f9381\">Lecture002.dox</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Lecture003.docx</Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n      <br />\r\n      <Navbar bg=\"light\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Videos</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#home\">Basic Chinese</Nav.Link>\r\n            <Nav.Link href=\"#features\">Intermediate Chinese</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Advanced Chinese</Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n\r\n      <br />\r\n      <Navbar bg=\"light\" variant=\"light\">\r\n        <Container>\r\n          <Navbar.Brand href=\"#home\">Evaluate Your Skills</Navbar.Brand>\r\n          <Nav className=\"me-auto\">\r\n            <Nav.Link href=\"#home\">Level 1 Evaluate</Nav.Link>\r\n            <Nav.Link href=\"#features\">Level 1.1 Evaluate</Nav.Link>\r\n            <Nav.Link href=\"#pricing\">Level 1.2 Evaluate</Nav.Link>\r\n          </Nav>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TeacherContentDisplay;","import Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nfunction FancyBorder(props) {\r\n  return (\r\n        <div className={'FancyBorder FancyBorder-' + props.color}>\r\n\r\n     <Container style={{\r\n          backgroundColor: 'lightblue'\r\n        }}>\r\n       {props.children}\r\n    </Container>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport function Dialog(props) {\r\n  return (\r\n\r\n    <FancyBorder color=\"blue\">\r\n      <h1 className=\"Dialog-title\">\r\n        {props.title}\r\n      </h1>\r\n      <p className=\"Dialog-message\">\r\n        {props.message}\r\n      </p>\r\n    </FancyBorder>\r\n  );\r\n}\r\n\r\n\r\nfunction WelcomeDialog() {\r\n  return (\r\n    <Container>\r\n   <Row>\r\n  <Col>\r\n  <Dialog\r\n      title=\"TeacherCom\"\r\n      message=\"Language Learning Platform using AI\" />\r\n\r\n  </Col>\r\n  \r\n    </Row>   \r\n  <Row>\r\n    <Col>\r\n      &nbsp;\r\n      \r\n    </Col>\r\n  </Row>\r\n  </Container>\r\n  \r\n  );\r\n\r\n   \r\n}\r\n\r\nexport function CurrentDialog()\r\n{ \r\n  return (\r\n   <div>\r\n    <Dialog\r\n      message=\"Powered by Blue Machines Inc \" />\r\n \r\n   </div>\r\n\r\n      \r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default WelcomeDialog;","import './css/main.css';\nimport './css/util.css';\n\nimport React, { useContext  } from \"react\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport {Button, Nav, Stack} from 'react-bootstrap';\nimport {Container} from 'react-bootstrap';\nimport {Row} from 'react-bootstrap';\nimport {Col} from 'react-bootstrap';\n\nimport { signInWithEmailAndPassword } from \"firebase/auth\";  \n\n\nconst  Intro = () => {\nconst navigate = useNavigate();\n\nconst Proceed = () => {\n      navigate(\"login/\");\n\n\n}\n\nconst ProceedToTeacherInfo = () => {\n  navigate(\"signup/\");\n\n\n}\n\n\nconst ProceedToStudentInfo = () => {\n  navigate(\"studentsignup/\");\n\n\n}\n\nreturn (\n<Stack gap={3}>\n<Container>\n     <Row>\n\t\t      <Col>\n          <Button className=\"success\"  onClick={ProceedToStudentInfo}>\n\t\t\t\t\t\t\tStudent Sign Up\n\t\t\t\t\t\t</Button>\n         \t\t<Button className=\"primary\"  onClick={Proceed}>\n\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t</Button>\n            <Button variant=\"info\" onClick={ProceedToTeacherInfo}>Teacher Sign Up\n            </Button> \n\t\t\t\t\t</Col>\n    </Row>\n</Container>\n  <Container>\n     \n    <Row>\n    <Col>\n       \n        <img src=\"../../intro.png\" width=\"400px\" height=\"400px\" />\n     </Col>  \n       <Col>\n           <label> Determination and untiring efforts to achieve our goals by using great technology and tools suits for your business and functional requirements. \n           <label> This platform will provide educational courses , the unique feature is you can communicate with your instructor without knowing his language by just using microphone or text . </label> \n           \n            <p> We are new but we have synergy to deliver to customer. </p>  \n            <p> Implmentation using Advanced technology Stack </p>\n            <p> Microsoft .Net Stack </p>\n            <p> Google Cloud Stack with Realtime Database</p>\n          </label>\n           <Nav>\n            <Nav.Item>\n            <Nav.Link href=\"https://http.bluemachines-inc.com/\" > Company Site </Nav.Link> \n         \n            </Nav.Item>\n           </Nav>\n       </Col>\n\n       </Row>\n        \n    </Container>        \n\n\n  </Stack>\n  \n);\n\n\n};\n\nexport default Intro;","import React , {useState} from 'react';\nimport { NavLink, useNavigate } from 'react-router-dom';\n\nimport {  createUserWithEmailAndPassword  } from 'firebase/auth';\n\nimport {auth}  from './config';\nimport { Container } from 'react-bootstrap';\n \nconst Signup = () => {\n\n    const navigate = useNavigate();\n \n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('');\n    \n \n    const onSubmit = (e) => {\n      e.preventDefault()\n     \n      \n\n      createUserWithEmailAndPassword(auth, email, password)\n        .then((userCredential) => {\n            // Signed in\n            const user = userCredential.user;\n            console.log(user.uid);\n            const userId = user.uid;\n\n            navigate(`/teachersignup/${userId}`);\n            // ...\n        })\n        .catch((error) => {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(errorCode, errorMessage);\n            // ..\n        });\n \n   \n    }\n \n  return (\n    <Container>\n\n    <main >        \n        <section>\n            <div>\n            <div className=\"signuplogo\">\n\t\t\t\t\t\tTeacher Sign Up Credentials Required\n\t\t    </div>\n\t\t  \n   \n                <div>                  \n                    <form>                                                                                            \n                        <div>\n                            <label htmlFor=\"email-address\">\n                                Email address\n                            </label>\n                            <input\n                                type=\"email\"\n                                label=\"Email address\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}  \n                                required                                    \n                                placeholder=\"Email address\"                                \n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"password\">\n                                Password\n                            </label>\n                            <input\n                                type=\"password\"\n                                label=\"Create password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)} \n                                required                                 \n                                placeholder=\"Password\"              \n                            />\n                        </div>                                             \n\n                 \n\n                        <button className='btn btn-primary'\n                            type=\"submit\" \n                            onClick={onSubmit}                        \n                        >  \n                            Sign up                                \n                        </button>\n                                                                     \n                    </form>\n                   \n                    <p>\n                        Already have an account?{' '}\n                        <NavLink to=\"/login\" >\n                            Sign in\n                        </NavLink>\n                    </p>                   \n                </div>\n            </div>\n        </section>\n    </main>\n    </Container>\n  \n  )\n}\n \nexport default Signup\n","import React , { useState  } from \"react\";\n\nfunction Panel({ title, children }) {\n    const [isActive, setIsActive] = useState(false);\n    return (\n      <section className=\"panel\">\n        <h3>{title}</h3>\n        {isActive ? (\n          <p>{children}</p>\n        ) : (\n          <button onClick={() => setIsActive(true)}>\n            Click to see Important Update\n          </button>\n        )}\n      </section>\n    );\n        }\n\n\n        export default Panel;","import React , { useState,useRef  } from \"react\";\nimport { Container ,Stack} from 'react-bootstrap';\nimport {NavLink,  useNavigate ,useParams } from 'react-router-dom';\nimport { getDatabase, ref, set} from \"firebase/database\";\nimport Panel from \"./Panel\";\nimport { useMemo } from 'react'\nimport Select from 'react-select'\nimport {auth}  from './config';\nimport {  createUserWithEmailAndPassword  } from 'firebase/auth';\nimport ReactLanguageSelect from 'react-languages-select';\nimport 'react-languages-select/css/react-languages-select.css';\n\n//import css module\n\n\nimport countryList from 'react-select-country-list'\n\n\n\nconst StudentSignUp = () => {\n\n\n  \n  const [phoneNumber, setPhone] = useState('');\n    const [details, setDetails] = useState('');\n    const [starttimeof, setTime] = useState('');\n    \n    const [name, setName] = useState('');\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [langaugeCode , setLanguage] = useState('');\n    const [uuid , setUID] = useState('');    \n    \n    const [countrycodesel, setCountryCode] = useState('')\n    const options = useMemo(() => countryList().getData(), [])\n  \n\n\n \n  const navigate = useNavigate();\n\n // we don't need to filter by id just show all teachers\n\nconst database = getDatabase();\n\n\n\nconst onSelectLanguage = (languageCode) => {\n    \n        \n        setLanguage(langaugeCode);\n    }\n      \n\n \n  \n \n  const OnSubmit = (e) => {\n    e.preventDefault();\n    var umid = '' ;\n       \n    createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n        // Signed in\n      const user = userCredential.user;\n       umid = user.uid;\n        // ...\n    })\n    .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n        // ..\n    });\n\n    setUID(umid);\n    console.log(uuid);\n   \n   \n    //const {  phoneNumber , details ,starttimeof  } = e.target.elements;\n    console.log (phoneNumber);\n    //const usersRef = ref(database, '/Teacher/'  );\n     // example set for new firebase version improved ....    \n     // Continue      \n     \n   // var current = modelData[keym];\n     set(ref(database, '/Student/' + uuid ), \n      {\n        CreatedBy : '',\n        CreatedDate: '',\n        studentClassificationID: 11,\n        StudentName : name,\n        Phone: phoneNumber ,\n        WhatToLearn : details,\n        StartDate : starttimeof,\n        UID: uuid,\n        CountryCode: countrycodesel,\n        PreferedLanguage: langaugeCode,\n        imageUrl : \"https://firebasestorage.googleapis.com/v0/b/cubmessenger.appspot.com/o/fcIuzRj0uATpOm5Rb8HL4bbiRB03%2F613433863438.jpg?alt=media&token=542ad057-2856-45d1-9420-393989dd7fe5\"\n      }\n      \n  );\n  navigate(\"/login\");\n    //console.log(usersRef);\n\n  \n\n\n  }\n\n\n  const changeCountryCode = value => {\n    setCountryCode(value)\n  }\n\n\n  \n \n return (\n <Container>\n\n \n   <Stack gap={3}>\n\t\t  \n<Container>\n\n<main >        \n    <section>\n      <div>  \n        <div className=\"signuplogo\">\n        Student Sign Up\n      </div>\n      \n            \n       <Panel isActive={true}>\n         Please make sure you enter enough information to be know about your study goals\n       </Panel>\n\n      \n                  \n                <form>\n                <div>\n                        <label htmlFor=\"langauge\">\n                            What Langauage you want to choose to communicate\n                        </label>\n                        <div>\n                        <ReactLanguageSelect className=\"dropdownlanguage\"  names={\"international\" }\n    defaultLanguage=\"en\"  value={langaugeCode}  placeholder=\"Select Language\" optionsSize= {12} selectedSize= {15} \n    onSelect={onSelectLanguage}\n     />\n\n                        </div>\n                                             </div>                                             \n              \n                <div>\n                       <label htmlFor=\"email-address\">\n                                Email address\n                            </label>\n                            <input\n                                type=\"email\"\n                                label=\"Email address\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}  \n                                required                                    \n                                placeholder=\"Email address\"                                \n                            />\n                        </div>\n\n                        <div>\n                            <label htmlFor=\"password\">\n                                Password\n                            </label>\n                            <input\n                                type=\"password\"\n                                label=\"Create password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)} \n                                required                                 \n                                placeholder=\"Password\"              \n                            />\n                        </div>                                             \n                                                                                           \n                    <div>\n                        <label htmlFor=\"phoneNumber\">\n                            Phone Number\n                        </label>\n                        <input\n                            type=\"phoneNumber\"\n                            label=\"Phone Number\"\n                            value={phoneNumber}\n                            onChange={(e) => setPhone(e.target.value)}  \n                            required                                    \n                            placeholder=\"Enter Phone Number\"                                \n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"password\">\n                            Enter Availibility From\n                        </label>\n                        <input\n                            type=\"date\"\n                            label=\"Enter Availibility From\"\n                            value={starttimeof}\n                            onChange={(e) => setTime(e.target.value)} \n                            required                                 \n                            placeholder=\"Enter Availibility\"              \n                        />\n                    </div>                                             \n\n                    <div>\n                        <label htmlFor=\"name\">\n                            Name\n                        </label>\n                        <input\n                            type=\"text\"\n                            label=\"Enter Your Name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)} \n                            required                                 \n                            placeholder=\"Enter your first and Last Name only\"              \n                        />\n                    </div>                                             \n\n                    <div>\n                        <label htmlFor=\"details\">\n                        What you want to achieve , Enter goals details\n                        </label>\n                        <textarea name=\"details\" type=\"textarea\" placeholder=\"Enter Details\" rows={5} cols={80} \n                           value={details}\n                           onChange={(e) => setDetails(e.target.value)} />\n                    </div>                                             \n\n                       <div>\n                        <label htmlFor=\"country\">\n                            Select Country \n                        </label>\n                        <Select options={options} value={countrycodesel} onChange={changeCountryCode} />\n\n                      </div>                                             \n                \n                     \n               \n                                                           \n\n\n\n                    <button className='btn btn-primary'\n                        type=\"submit\" \n                        onClick={OnSubmit}                        \n                    >  \n                        Submit                             \n                    </button>\n                                                                 \n                </form>\n               \n                <p>\n                    Already have an account?{' '}\n                    <NavLink to=\"/login\">\n                        Sign in\n                    </NavLink>\n                </p>                   \n            </div>\n\n        \n    </section>\n</main>\n</Container>\n \n    </Stack>\n   </Container>\n\n      );\n}\n\nexport default StudentSignUp;","import React , { useState,useRef  } from \"react\";\nimport { Container ,Stack} from 'react-bootstrap';\nimport {NavLink,  useNavigate ,useParams } from 'react-router-dom';\nimport { getDatabase, ref, set} from \"firebase/database\";\nimport Panel from \"./Panel\";\nimport { useMemo } from 'react'\nimport Select from 'react-select'\nimport {  createUserWithEmailAndPassword } from 'firebase/auth';\n\nimport countryList from 'react-select-country-list'\n\n\n\nconst TeacherSignUp = () => {\n\n\n  \n  const [phoneNumber, setPhone] = useState('');\n    const [details, setDetails] = useState('');\n    const [starttimeof, setTime] = useState('');\n    const [years, setYears] = useState('');\n    const [name, setName] = useState('');\n    \n    const [countrycodesel, setCountryCode] = useState('')\n    const options = useMemo(() => countryList().getData(), [])\n  \n\n\n  const inputRef = useRef(null);\n \n  const navigate = useNavigate();\n  const teacherInfo = useParams();\n\n // we don't need to filter by id just show all teachers\nconst uuid = teacherInfo.userId;\nconsole.log(uuid);\nconst database = getDatabase();\n\n\n\n\n var keym = uuid;\n \n\n \n  \n  const OnSubmit = (e) => {\n    e.preventDefault();\n   \n   \n    //const {  phoneNumber , details ,starttimeof  } = e.target.elements;\n    console.log (phoneNumber);\n    \n     \n    //const usersRef = ref(database, '/Teacher/'  );\n     // example set for new firebase version improved ....    \n     // Continue      \n     \n   // var current = modelData[keym];\n     set(ref(database, '/Teacher/' + uuid ), \n      {\n        CreatedBy : '',\n        CreatedDate: '',\n        TeacherClassificationID: 11,\n        TeacherName : name,\n        Phone: phoneNumber ,\n        Experience : details,\n        YearsOfTeaching: years,\n        StartDate : starttimeof,\n        UID: keym,\n        CountryCode: countrycodesel,\n        imageUrl : \"https://firebasestorage.googleapis.com/v0/b/cubmessenger.appspot.com/o/fcIuzRj0uATpOm5Rb8HL4bbiRB03%2F613433863438.jpg?alt=media&token=542ad057-2856-45d1-9420-393989dd7fe5\"\n      }\n      \n  );\n  navigate(\"/login\");\n    //console.log(usersRef);\n\n  \n\n\n  }\n\n\n  const changeCountryCode = value => {\n    setCountryCode(value)\n  }\n\n\n  \n \n return (\n <Container>\n\n \n   <Stack gap={3}>\n\t\t  \n<Container>\n\n<main >        \n    <section>\n        <div className=\"signuplogo\">\n           Teacher Sign Up Additional Information\n           </div>\n      \n            \n       <Panel isActive={true}>\n         Please make sure you enter enough information to be qualified for teacher.\n       </Panel>\n\n      \n                  \n                <form>                                                                                            \n                    <div>\n                        <label htmlFor=\"phoneNumber\">\n                            Phone Number\n                        </label>\n                        <input\n                            type=\"phoneNumber\"\n                            label=\"Phone Number\"\n                            value={phoneNumber}\n                            onChange={(e) => setPhone(e.target.value)}  \n                            required                                    \n                            placeholder=\"Enter Phone Number\"                                \n                        />\n                    </div>\n\n                    <div>\n                        <label htmlFor=\"password\">\n                            Password\n                        </label>\n                        <input\n                            type=\"date\"\n                            label=\"Enter Availibility From\"\n                            value={starttimeof}\n                            onChange={(e) => setTime(e.target.value)} \n                            required                                 \n                            placeholder=\"Enter Availibility\"              \n                        />\n                    </div>                                             \n\n                    <div>\n                        <label htmlFor=\"name\">\n                            Name\n                        </label>\n                        <input\n                            type=\"text\"\n                            label=\"Enter Your Name\"\n                            value={name}\n                            onChange={(e) => setName(e.target.value)} \n                            required                                 \n                            placeholder=\"Enter your first and Last Name only\"              \n                        />\n                    </div>                                             \n\n                    <div>\n                        <label htmlFor=\"details\">\n                            Enter Details\n                        </label>\n                        <textarea name=\"details\" type=\"textarea\" placeholder=\"Enter Details\" rows={5} cols={80} \n                           value={details}\n                           onChange={(e) => setDetails(e.target.value)} />\n                    </div>                                             \n\n                    <div>\n                        <label htmlFor=\"details\">\n                            Enter Years of Teaching Experience\n                        </label>\n                        <input\n                            type=\"number\"\n                            label=\"Enter Years\"\n                            value={years}\n                            onChange={(e) => setYears(e.target.value)} \n                            required                                 \n                            placeholder=\"Enter Years\"              \n                        />\n\n                       <div>\n                        <label htmlFor=\"country\">\n                            Select Country \n                        </label>\n                        <Select options={options} value={countrycodesel} onChange={changeCountryCode} />\n\n                      </div>                                             \n                \n                     \n               \n               </div>                                             \n\n\n\n                    <button className='btn btn-primary'\n                        type=\"submit\" \n                        onClick={OnSubmit}                        \n                    >  \n                        Submit                             \n                    </button>\n                                                                 \n                </form>\n               \n                <p>\n                    Already have an account?{' '}\n                    <NavLink to=\"/login\">\n                        Sign in\n                    </NavLink>\n                </p>                   \n        \n    </section>\n</main>\n</Container>\n \n    </Stack>\n   </Container>\n\n      );\n}\n\nexport default TeacherSignUp;","\nimport './TeacherList.css'\nimport {React, useState , useEffect, useCallback} from 'react' \nimport {Button, Table} from 'react-bootstrap' ;\nimport {Link , useParams} from 'react-router-dom';\nimport { getDatabase, ref, onValue} from \"firebase/database\";\n\nimport { useNavigate } from \"react-router-dom\";\n\nfunction TeachersListing()  {\n// age 42 not bad\nvar teachersData =  [];\nconst teacherInfo = useParams();\nconst navigate = useNavigate();\n // we don't need to filter by id just show all teachers\nconst uuid = teacherInfo.teacherId;\nconsole.log(uuid);\n// global teacher list plus all \n// under one global id all and then filter based login Assigned Teacher \n// Generate guid\nvar [currentTeachers, setCurrentTeachers] = useState(teachersData);\nvar [selectedTeacher,setSelectedTeacher] = useState('');\n\n\nconst [loading, setLoading] = useState(true);\nvar [currentFilterValue, setCurrentValue] = useState('');\nconst database = getDatabase();\n\nconst  handleSubmit = (e) => {\n     setCurrentValue(e.target.value);\n    \n   \n\n\n};\nconst  handleChange = (e) => {\n    \n\n    setCurrentValue(e.target.value);\n    \n    getFilteredTeachers(e.target.value);\n\n    \n     \n\n};\n\nconst  AddTeacher = (e) => {\n    console.log(e.target.value);\n    var currentUID = e.target.value;\n    setSelectedTeacher(currentUID);\n    navigate(`/teacherselected/${currentUID}` );\n    \n     \n\n};\n\n const  getFilteredTeachers = useCallback((currentFilterValue) => {\n \n     if(!currentFilterValue)\n     {\n        console.log(currentFilterValue);\n        const refer = ref(database, '/Teacher'  );\n        const teachers = [];\n          \n   \n          onValue(refer, (snapshot) => {\n              snapshot.forEach(snap => {\n                 \n                  let keyName = snap.key;\n                  let dataM = snap.val();\n                  console.log(dataM);\n                  // No Fix DB Structure\n                     teachers.push({\"key\": keyName , \"data\": dataM});\n              });\n              setCurrentTeachers(teachers);\n              setLoading(false)\n          \n        });\n  \n        if(currentFilterValue === \"\")\n        {\n            return;\n        }\n   \n      \n\n     }\n     currentTeachers = currentTeachers.filter ( teacher => teacher.data.TeacherName.includes(currentFilterValue));\n     setCurrentTeachers(currentTeachers);\n  \n     \n     console.log(currentTeachers);\n     \n\n\n});\n\n\n\n\nuseEffect(() => {\n  console.log(uuid);  \n  const refer = ref(database, '/Teacher/'  );\n  const teachers = [];\n    \n    onValue(refer, (snapshot) => {\n        snapshot.forEach(snap => {\n           \n            let keyName = snap.key;\n            let dataM = snap.val();\n            // No Fix DB Structure\n               teachers.push({\"key\": keyName , \"data\": dataM});\n        });\n        setCurrentTeachers(teachers);\n        setLoading(false)\n    \n  });\n  //setCurrentTeachers(prevTeachers => prevTeachers.add(teachers))  \n}, [ setCurrentTeachers]);\n  \n\n \n return (\n    <div className=\"MainDiv\">\n      <div className=\"jumbotron text-center bg-sky\">\n          <h2>Teachers Information</h2>\n      </div>\n     <div className=\"container\">\n          <>\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-10 mx-auto col-md-8 mt-5 text-center\">\n                            <form className=\"mt-4\" onSubmit={handleSubmit}>\n                                <div className=\"form-group\">\n                                    <input\n                                        type=\"text\"\n                                        name=\"search\"\n                                        placeholder=\"Type Here to Search By Teacher Name or Language\"\n                                        \n                                        value={currentFilterValue}\n                                        onChange={handleChange}\n                                    />\n                                </div>\n                                <div>\n                                    <button className=\"button-orange\" size=\"lg\" type=\"submit\">\n          Search\n        </button>\n                                </div>    \n                                <div>\n                                    &nbsp;\n                                    &nbsp;\n                                    &nbsp;\n                                    \n                                </div>\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </>\n      \n\n\n     </div>\n      <div className=\"container\">\n\n     {currentTeachers.map( function(row,index)  {\n        return (\n         \n<li key={index} value={row.data.UID}>\n<img id={row.data.ID} src={row.data.imageUrl} background-repeat=\"none\"  width=\"100\" height=\"100\" /> \n    <p>\n        <b>{row.data.TeacherName}</b>\n          {' ' + row.data.Experience + ' '}\n          having {row.data.YearsOfTeaching} years of expereince.  \n   \n      </p>        <span> <Button variant=\"primary\" value={row.data.UID} onClick={AddTeacher}> Select Me </Button> </span>\n    </li>\n  )})}\n\n        \n               \n      \n    \n  \n\n\n     </div>\n    </div>\n  );\n  \n\n}\n\nexport default TeachersListing;","\nimport {React, useState } from 'react' \n\n\nconst VideoContent = ({props}) => {\n    \n  const currentContext = props;\n  const src = currentContext.videoUrl;\n    const disabled  = props.disabled;\n  \n     \n\n\n    return (\n      <>\n        <video disabled={currentContext.disabled} src={src} controls width=\"100%\">\n          Sorry, your browser doesn't support embedded videos.\n        </video>\n      </>\n    );\n  };\n  export default VideoContent;","\n\nimport './TeacherSelected.css';\nimport {React, useState , useEffect  } from 'react' \nimport {useParams, useNavigate} from 'react-router-dom';\n\nimport { getDatabase, ref, onValue} from \"firebase/database\";\nimport { Button } from 'react-bootstrap';\nimport VideoContent from './firebase/communicator/Video';\n\n function TeacherSelected() {\n\n  var teachersData =  [];\n    const teacherSelectedInfo = useParams();\n    const uuid = teacherSelectedInfo.teacherId;\n  //  console.log(uuid);  \n    const navigate = useNavigate();\n   var teacherData;\n    \n    const database = getDatabase();\n    var [currentTeachers, setCurrentTeachers] = useState(teachersData);\n    var [selectedTeacher,setSelectedTeacher] = useState(teacherData);\n    var [selectedVideoUrl,setVideoUrl] = useState('');\n    var [videodisabled,setDisabled]=useState(true);\n    var [enableDisableText, setDisabledText] = useState('Enable');\n   // var [currentUID,setUID] = useState(uuid);\n\n \n    \n  const displayVideoContent = () => {\n\n      // this video url will be picked from storage container\n      const url = selectedTeacher.data.videoUrl;\n      setVideoUrl(url);\n\n      if(videodisabled === true)\n      {\n        setDisabled(false);\n        setDisabledText(\"Disable\");\n\n      }\n      else \n      {\n        setDisabled(true);\n        setDisabledText(\"Enable\");\n \n      }\n     // navigate(`/Video/${url}`);\n    \n\n  }\n\n\n\nconst registerDemoCycle=()=>\n{\n   navigate('/DemoRegister');\n\n}\n\nuseEffect(() => {\n \n  const teachers = [];\n  \nconst refer = ref(database, '/Teacher' );\n//const dbRef =  database.ref('/Teacher/' + currentUID);\n  \n\n//  console.log(ref.Once().TeacherName);\n\nonValue(refer, (snapshot) => {\n        snapshot.forEach(snap => {\n           \n            let keyName = snap.key;\n            console.log(keyName);\n            let dataM = snap.val();\n            console.log(dataM);\n            console.log(uuid);\n            // No Fix DB Structure\n              if(keyName === uuid)\n              {\n               teachers.push({\"key\": keyName , \"data\": dataM});\n              }\n        });\n        setSelectedTeacher(teachers[0]);\n        setCurrentTeachers(teachers);\n      \n  });\n  //setCurrentTeachers(prevTeachers => prevTeachers.add(teachers))  \n}, [ setCurrentTeachers]);\n  \nreturn (\n<div className=\"container\">\n\n    \n    \n      <h1>Teacher Description</h1>\n      {currentTeachers.map( function(row,index)  {\n      return (\n\n      <section key={index}  className=\"profile\">\n        <h2>{row.data.TeacherName}</h2>\n        <img\n          className=\"avatar\"\n          src={row.data.imageUrl}\n          alt={row.data.TeacherName}\n          width={70}\n          height={70}\n        />\n        <ul>\n          <li>\n            <b>Experience: </b> \n            {row.data.Experience}\n          </li>\n          <li>\n            <b>Year of Experience : {row.data.YearsOfTeaching} </b> \n             {row.data.CountryCode.label}\n          </li>\n          <li>\n            <b>Available From: </b>\n            {row.data.StartDate}\n          </li>\n        </ul>\n      </section>\n        \n  )})}\n    <section>\n        <div className='row'>\n          <div className='col0 col-sm'>\n          <Button onClick={registerDemoCycle} variant='primary'> Register Demo </Button>\n        </div>\n          <div className='col0 col-sm'>\n            <VideoContent  props={{videoUrl:selectedVideoUrl, disabled: videodisabled}} />\n            <Button onClick={displayVideoContent}  variant='success'> {enableDisableText} Video Introduction </Button>\n      \n          </div>\n        </div>\n        \n           \n          \n      </section>\n  \n  </div>\n)\n      }\n\n      export default TeacherSelected;\n\n\n","import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nfunction CoolButton({props}) {\n  \n  var currentValPush = props;  \n  var [currentText, setCurrentValue] = useState(currentValPush.goals);\n  var [currentDataRefTag, setCurrentTag] = useState(currentValPush.timeSlotSelected); \n\nfunction onClickRequest(e)  {\n     \n   \n\n}    \n    \n  \nreturn (\n    <>\n      <style type=\"text/css\">\n        {`\n    .btn-flat {\n      background-color: green;\n      color: white;\n    }\n\n    .btn-xl {\n      padding: 1rem 1.5rem;\n      font-size: 0.9rem;\n    }\n    `}\n      </style>\n\n      <Button onClick={onClickRequest} variant=\"flat\" size=\"xxl\">\n        Request for Demo\n      </Button>\n    </>\n  );\n}\n\nexport default CoolButton;","import { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\n\nfunction ResetButton({props}) {\n  \n  var currentValPush = props;  \n  var [currentText, setCurrentValue] = useState(currentValPush.goals);\n  var [currentDataRefTag, setCurrentTag] = useState(currentValPush.timeSlotSelected); \n\nfunction onClickRequest(e)  {\n     \n   \n\n}    \n    \n  \nreturn (\n    <>\n      <style type=\"text/css\">\n        {`\n    .btn-reset {\n      background-color: grey ;\n      color: white;\n    }\n\n    .btn-xl{\n      padding: 1rem 1.0rem;\n      font-size: 0.9rem;\n    }\n    `}\n      </style>\n\n      <Button onClick={onClickRequest} variant=\"reset\" size=\"xxl\">\n        Reset All\n      </Button>\n    </>\n  );\n}\n\nexport default ResetButton;","import {React, useState } from 'react' \nimport {Button} from 'react-bootstrap' ;\nimport {  useParams} from 'react-router-dom';\nimport { getDatabase} from \"firebase/database\";\n\nimport { useNavigate } from \"react-router-dom\";\nimport CoolButton  from './CoolButton';\nimport ResetButton from './ResetButton';\n\n\n  const  DemoRegister=() => {\n    // You will be navigate to payment and class availibility slots\n    const teacherInfo = useParams();\n    const [ngoals,setGoals] = useState('Enter Goals Here , this page is in Progress');\n    \n\n    const navigate = useNavigate();\n     // we don't need to filter by id just show all teachers\n    const uuid = teacherInfo.teacherId;\n    console.log(uuid);\n    // global teacher list plus all \n    // under one global id all and then filter based login Assigned Teacher \n    // Generate guid\n    \n    \n    const database = getDatabase();\n    \n    const callUpdate=(e)=> {\n        const currentVal = e.target.value;\n         setGoals(currentVal);            \n\n    }\n\n   // This will request the Goals and will \n\n    const handleSubmit= (e) => {\n      // Prevent the browser from reloading the page\n      e.preventDefault();\n  \n      // Read the form data\n       const [newGoals] = e.target.values;\n       setGoals(newGoals); \n  \n      \n    }\n    // Display Time Slots Here tonight\n  \n    return (\n     \n     <div className='container'>\n       <form method=\"post\" onSubmit={handleSubmit}>\n        <label>\n          <b>Whats your goals </b> </label>\n          <textarea value={ngoals}\n            name=\"newGoals\"\n            onChange={callUpdate}\n            rows={4}\n            cols={40}\n          />\n       \n        <hr />\n        <ResetButton props={{goals:ngoals}} />\n        <CoolButton props={{goals:ngoals}}  />\n    \n      </form>\n     </div>\n    \n    );\n  }\n   export default DemoRegister;","import { createContext, useContext, useEffect, useState } from 'react'\n\nimport {auth } from './config' \n\n\nimport { signInWithEmailAndPassword, createUserWithEmailAndPassword , updateProfile } from \"firebase/auth\";  \n\nconst AuthContext = createContext()\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport function AuthProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState()\n  const [loading, setLoading] = useState(true)\n\n  function login(email, password) {\n    return auth.signInWithEmailAndPassword(email, password)\n  }\n\n  function signOut() {\n    return auth.signOut();\n  }\n\n  function signUp(email, password) {\n    return auth.createUserWithEmailAndPassword(email, password)\n  }\n\n  function getUser() {\n    return auth.currentUser\n  }\n\n  function isAdmin() {\n    return auth.currentUser.getIdTokenResult()\n    .then((idTokenResult) => {\n      if (!!idTokenResult.claims.admin) {\n        return true\n      } else {\n        return false\n      }\n    })\n  }\n\n  function isEditor() {\n\n  }\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged(user => {\n      setCurrentUser(user)\n      setLoading(false)\n    })\n\n    return unsubscribe\n  }, [])\n\n  const value = {\n    currentUser,\n    getUser,\n    login,\n    signOut,\n    signUp\n  }\n\n  return (\n    <AuthContext.Provider value={value}>\n      { !loading && children }\n    </AuthContext.Provider>\n  )\n\n}","\n\nimport LoginForm from './LoginForm'\nimport { BrowserRouter, Routes, Route , Navigate} from \"react-router-dom\";\nimport TeachersDisplay from './firebase/TeachersDisplay';\nimport TeacherContentDisplay from './firebase/TeacherContentDisplay';\nimport WelcomePage, { CurrentDialog } from './WelcomePage';\nimport Intro from './Intro';\nimport Signup from './Signup';\nimport StudentSignUp from './StudentSignUp';\nimport TeacherSignUp from './TeacherSignUp';\nimport TeachersListing from './firebase/TeachersListing';\nimport TeacherSelected from './TeacherSelected';\nimport DemoRegister from './firebase/communicator/DemoRegister';\nimport { useEffect , useState } from 'react';    \nimport { AuthProvider } from './AuthContext';\n\nfunction App() {\n  \n  const [isAuthenticated, setIsAuthenticated] = useState(\n    () => JSON.parse(localStorage.getItem('auth')) || false\n  );\n\n  const setAuth = (value) => {\n    setIsAuthenticated(value);\n    localStorage.setItem(\"auth\", JSON.stringify(isAuthenticated))\n    //alert(value);\n  };\n\n  useEffect(()=>{\n    localStorage.setItem(\"auth\", JSON.stringify(isAuthenticated));\n    setIsAuthenticated(isAuthenticated); \n\n  }, [isAuthenticated]);\n\n  return (\n\n     <>\n     <AuthProvider>\n\n     <WelcomePage/>\n \n      <BrowserRouter>\n        <Routes>\n         <Route exact path=\"/\" element={<Intro/>} />\n         \n         <Route exact path=\"/login\" element={<LoginForm />} />\n        <Route exact path=\"/signup\" element={<Signup/>} />\n        <Route exact path=\"/studentsignup\" element={<StudentSignUp/>} />\n        <Route exact path=\"/demoregister\" element={<DemoRegister/>} />\n        \n        <Route exact path=\"/teachersignup/:userId\" element={<TeacherSignUp/>} />\n       \n           <Route exact path=\"/teachers/:teacherId\"  element={<TeachersDisplay />} />\n         <Route exact path=\"/teacherselected/:teacherId\"  element={<TeacherSelected  />} />\n      \n         <Route exact path=\"/teacherslist/:teacherId\" element={ <TeachersListing  />} />\n         \n         <Route exact path=\"/contents\" element = {<TeacherContentDisplay/>}  />\n  \n        \n              \n          </Routes>\n     </BrowserRouter>  \n     </AuthProvider>\n\n    <CurrentDialog/>\n    \n  </>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport 'react-languages-select/css/react-languages-select.css';\n \n//OR import sass module\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { GoogleOAuthProvider } from '@react-oauth/google';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  \n    <GoogleOAuthProvider clientId=\"221869384055-jo745ppfdidkklaqltrlrnklbh10nk72.apps.googleusercontent.com\">\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>\n</GoogleOAuthProvider>,\n  \n\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}